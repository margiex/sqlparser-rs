language: rust
# tarpaulin has only been tested on bionic and trusty other distros may have issues
dist: bionic
addons:
    apt:
        packages:
            - libssl-dev
cache: cargo

rust:
  - stable

before_script:
  # Travis installs rust with a non-default "minimal" profile, and advises us
  # to add clippy manually:
  - rustup component add clippy
  # Unfortunately, this method often breaks on the nightly channel, where the
  # most recent build might not have all the optional components.
  # We explicitly specify `--profile default` to obtain the most recent nightly
  # that has rustfmt (we don't care if it's a week old, as we need it only for
  # an experimental flag):
  - rustup toolchain install nightly --profile default

  - pip install 'travis-cargo<0.2' --user && export PATH=$HOME/.local/bin:$PATH
  - export PATH=$HOME/.cargo/bin:$PATH
  - |
    if [[ "$TRAVIS_RUST_VERSION" == stable ]]; then
      cargo install cargo-tarpaulin
    fi

script:
  # Clippy must be run first, as its lints are only triggered during
  # compilation. Put another way: after a successful `cargo build`, `cargo
  # clippy` is guaranteed to produce no results. This bug is known upstream:
  # https://github.com/rust-lang/rust-clippy/issues/2604.
  - travis-cargo clippy -- --all-targets --all-features -- -D warnings
  - travis-cargo build
  - travis-cargo test
  - travis-cargo test -- all-features
  # The license_template_path setting we use to verify copyright headers is
  # only available on the nightly rustfmt.
  - cargo +nightly fmt -- --check --config-path <(echo 'license_template_path = "HEADER"')

# after_success:
#   - cargo tarpaulin --ciserver travis-ci --coveralls $TRAVIS_JOB_ID

env:
  global:
    - TRAVIS_CARGO_NIGHTLY_FEATURE=""
